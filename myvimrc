call plug#begin('~/.vim/bundle')

Plug 'tpope/vim-surround'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'vim-airline/vim-airline'
Plug 'vim-airline/vim-airline-themes'
Plug 'MarcWeber/vim-addon-mw-utils'
Plug 'tomtom/tlib_vim'
Plug 'preservim/nerdtree'
Plug 'rafi/awesome-vim-colorschemes'
Plug 'ryanoasis/vim-devicons'
Plug 'tc50cal/vim-terminal'
Plug 'KarimElghamry/vim-auto-comment'
Plug 'vim-scripts/AutoComplPop'
Plug 'navarasu/onedark.nvim'
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}

call plug#end()

colorscheme onedark

set number
set relativenumber
set expandtab
set tabstop=3
set shiftwidth=3
set autoindent

set splitbelow splitright
set hlsearch
set ignorecase
set nosmartcase
set autowrite

set titlestring=%t
set title
set ruler
set ic
set wrap!
set sidescroll=1
set showmatch
set viminfo='0,:0,<0,@0,f0
set omnifunc=syntaxcomplete#Complete
set clipboard=unnamedplus,unnamed
set complete+=kspell
set completeopt=menuone,longest

filetype plugin on

syntax on

nnoremap <F9> :call HBLinterRun()<CR>

vnoremap <silent><A-p> :AutoInlineComment<CR>
nnoremap <silent><A-p> :AutoInlineComment<CR>

nnoremap <C-z> :u<CR>
vnoremap <C-z> :u<CR>
inoremap <C-z> <c-o>:u<CR>
vnoremap <C-z> <c-o>:u<CR>

nnoremap <C-y> <C-R>
nnoremap <silent><C-l> :noh<CR>
nnoremap <silent><C-s> :w<CR>:call TrimWhitespace()<CR>:echo strftime('%a, %d %b %Y %H:%M:%S')<CR>

nnoremap <silent><C-Up> # zz
nnoremap <silent><C-Down> * zz
nnoremap <C-Left> b
nnoremap <C-Right> e

nnoremap <silent><S-Up> :silent! :-5<CR>zz
nnoremap <silent><S-Down> :silent! :+5<CR>zz

noremap x "_x
noremap <Del> "_x
noremap D "_D
noremap d "_d
noremap dd "_dd

nnoremap <silent><C-p> :Files<CR>
nnoremap <silent><C-o> :Buffers<CR>
nnoremap <silent><A-r> :Tags<CR>
nnoremap <silent><C-r> :BTags<CR>

inoremap <C-z> <C-O>u
inoremap <C-y> <C-O><C-R>

autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p
autocmd Bufenter * let g:my_current_file_path = expand("%")
autocmd Bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
autocmd BufEnter * if bufname('#') =~ 'NERD_tree_\d\+' && bufname('%') !~ 'NERD_tree_\d\+' && winnr('$') > 1 |
    \ let buf=bufnr() | buffer# | execute "normal! \<C-W>w" | execute 'buffer'.buf | endif

let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
let g:default_inline_comment = '//'

let mapleader=" "
let maplocalleader=" "

if empty(glob(data_dir . '/autoload/plug.vim'))
  silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

fun! TrimWhitespace()
    let l:save = winsaveview()
    keeppatterns %s/\s\+$//e
    call winrestview(l:save)
endfun

fun! HBLinterRun()
    exe '!hblint ' . g:my_current_file_path
endfun
